/*
 * Twilio - Api
 *
 * This is the public Twilio REST API.
 *
 * The version of the OpenAPI document: 1.37.3
 * Contact: support@twilio.com
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct ApiPeriodV2010PeriodAccountPeriodRecordingPeriodRecordingTranscription {
    /// The SID of the Account that created the resource
    #[serde(rename = "account_sid", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub account_sid: Option<Option<String>>,
    /// The API version used to create the transcription
    #[serde(rename = "api_version", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub api_version: Option<Option<String>>,
    /// The RFC 2822 date and time in GMT that the resource was created
    #[serde(rename = "date_created", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub date_created: Option<Option<String>>,
    /// The RFC 2822 date and time in GMT that the resource was last updated
    #[serde(rename = "date_updated", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub date_updated: Option<Option<String>>,
    /// The duration of the transcribed audio in seconds.
    #[serde(rename = "duration", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub duration: Option<Option<String>>,
    /// The charge for the transcription
    #[serde(rename = "price", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub price: Option<Option<f32>>,
    /// The currency in which price is measured
    #[serde(rename = "price_unit", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub price_unit: Option<Option<String>>,
    /// The SID that identifies the transcription's recording
    #[serde(rename = "recording_sid", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub recording_sid: Option<Option<String>>,
    /// The unique string that identifies the resource
    #[serde(rename = "sid", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub sid: Option<Option<String>>,
    #[serde(rename = "status", skip_serializing_if = "Option::is_none")]
    pub status: Option<crate::models::RecordingTranscriptionEnumStatus>,
    /// The text content of the transcription.
    #[serde(rename = "transcription_text", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub transcription_text: Option<Option<String>>,
    /// The transcription type
    #[serde(rename = "type", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub r#type: Option<Option<String>>,
    /// The URI of the resource, relative to `https://api.twilio.com`
    #[serde(rename = "uri", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub uri: Option<Option<String>>,
}

impl ApiPeriodV2010PeriodAccountPeriodRecordingPeriodRecordingTranscription {
    pub fn new() -> ApiPeriodV2010PeriodAccountPeriodRecordingPeriodRecordingTranscription {
        ApiPeriodV2010PeriodAccountPeriodRecordingPeriodRecordingTranscription {
            account_sid: None,
            api_version: None,
            date_created: None,
            date_updated: None,
            duration: None,
            price: None,
            price_unit: None,
            recording_sid: None,
            sid: None,
            status: None,
            transcription_text: None,
            r#type: None,
            uri: None,
        }
    }
}


